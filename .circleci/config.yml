---
version: 2.1

orbs:
  terraform: twdps/terraform@3.1.1
  op: twdps/onepassword@3.0.0
  do: twdps/pipeline-events@5.0.1

globals:
  - &context platform
  - &executor-image twdps/circleci-infra-aws:alpine-7.10.0

on-push-main: &on-push-main
  branches:
    only: /main/
  tags:
    ignore: /.*/

on-tag-main: &on-tag-main
  branches:
    ignore: /.*/
  tags:
    only: /.*/

commands:

  set-environment:
    description: generate environment credentials and configuration from templates
    parameters:
      cluster:
        description: cluster to be configured
        type: string
    steps:
      - op/env:
          env-file: op.<< parameters.cluster >>.env
      - op/tpl:
          tpl-path: environments
          tpl-file: << parameters.cluster >>.auto.tfvars.json
      - terraform/terraformrc
      - do/bash-functions

  aws-integration-tests:
    description: run awspec aws configuration tests
    parameters:
      cluster:
        description: tf workspace name
        type: string
    steps:
      - run:
          name: run awspec aws configuration tests
          environment:
            WORKSPACE: <<parameters.cluster>>
          command: bash scripts/run_awspec_integration_tests.sh << parameters.cluster >>

jobs:

  recurring-integration-tests:
    description: |
      Recurring job (weekly) to run pipeline integration tests to detect aws configuration drift
    docker:
      - image: *executor-image
    environment:
      TF_WORKSPACE: << parameters.cluster >>
    shell: op run --env-file op.<< parameters.cluster >>.env -- /bin/sh -eo pipefail
    parameters:
      cluster:
        description: nonprod or production cluster configuration
        type: string
    steps:
      - checkout
      - setup_remote_docker
      - set-environment:
          cluster: << parameters.cluster >>
      - aws-integration-tests:
          cluster: << parameters.cluster >>

workflows:

  deploy sbx-i01-aws-us-east-1 vpc:
    when:
      not:
        equal: [ scheduled_pipeline, << pipeline.trigger_source >> ]
    jobs:
      - terraform/static-analysis:
          name: static code analysis
          context: *context
          executor-image: *executor-image
          workspace: sbx-i01-aws-us-east-1
          tflint-scan: true
          tflint-provider: aws
          trivy-scan: true
          before-static-analysis:
            - op/env:
                env-file: op.sbx-i01-aws-us-east-1.env
          filters: *on-push-main

      - terraform/plan:
          name: sbx-i01-aws-us-east-1 change plan
          context: *context
          executor-image: *executor-image
          workspace: sbx-i01-aws-us-east-1
          checkov-scan: true
          before-plan:
            - set-environment:
                cluster: sbx-i01-aws-us-east-1
          filters: *on-push-main

      - approve sbx-i01-aws-us-east-1 changes:
          type: approval
          requires:
            - static code analysis
            - sbx-i01-aws-us-east-1 change plan
          filters: *on-push-main

      - terraform/apply:
          name: apply sbx-i01-aws-us-east-1 changes
          context: *context
          workspace: sbx-i01-aws-us-east-1
          before-apply:
            - set-environment:
                cluster: sbx-i01-aws-us-east-1
          after-apply:
            - aws-integration-tests:
                cluster: sbx-i01-aws-us-east-1
          requires:
            - approve sbx-i01-aws-us-east-1 changes
          filters: *on-push-main

  deploy prod-i01-aws-us-east-2 vpc:
    jobs:
      - terraform/plan:
          name: prod-i01-aws-us-east-2 change plan
          context: *context
          executor-image: *executor-image
          workspace: prod-i01-aws-us-east-2
          checkov-scan: true
          before-plan:
            - set-environment:
                cluster: prod-i01-aws-us-east-2
          filters: *on-tag-main

      - approve prod-i01-aws-us-east-2 changes:
          type: approval
          requires:
            - prod-i01-aws-us-east-2 change plan
          filters: *on-tag-main

      - terraform/apply:
          name: apply prod-i01-aws-us-east-2 changes
          context: *context
          workspace: prod-i01-aws-us-east-2
          before-apply:
            - set-environment:
                cluster: prod-i01-aws-us-east-2
          after-apply:
            - aws-integration-tests:
                cluster: prod-i01-aws-us-east-2
            - do/slack-bot:
                channel: lab-events
                message: Release psk-aws-platform-vpc
                include-link: true
                include-tag: true
          requires:
            - approve prod-i01-aws-us-east-2 changes
          filters: *on-tag-main

      - do/gh-release:
          name: generate release notes
          context: *context
          notes-from-file: release.md
          include-commit-msg: true
          before-release:
            - op/env:
                env-file: op.prod-i01-aws-us-east-2.env
          requires:
            - apply prod-i01-aws-us-east-2 changes
          filters: *on-tag-main

  schedule weekly integration test:
    jobs:
      - do/schedule-pipeline:
          name: weekly integration test
          context: *context
          scheduled-pipeline-name: weekly-integration-test
          scheduled-pipeline-description: |
            Weekly, automated run of platform vpc integration tests
          hours-of-day: "[1]"
          days-of-week: "[\"SUN\"]"
          before-schedule:
            - op/env:
                env-file: op.prod-i01-aws-us-east-2.env
          filters: *on-tag-main

  weekly integration test:
    when:
      equal: [ scheduled_pipeline, << pipeline.trigger_source >> ]
    jobs:
      - recurring-integration-tests:
          name: sbx-i01-aws-us-east-1 integration test
          context: *context
          cluster: sbx-i01-aws-us-east-1
      - recurring-integration-tests:
          name: prod-i01-aws-us-east-2 integration test
          context: *context
          cluster: prod-i01-aws-us-east-2
